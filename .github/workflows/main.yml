name: Go Build & Test

on:
  push:
    tags:
      - 'v*.*.*'    # Match version tags
  workflow_dispatch:      

permissions:
  contents: write

jobs:
  goreleaser_x64:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '>=1.24.1'

      # Install static libraries for static linking on ubuntu image:
      # '-linkmode external -extldflags "-static -ldbus-1 -lsystemd -lpcap -lcap -lrdmacm -libverbs -lnl-route-3 -lnl-3"'
      - name: Download required libraries
        run: |
          sudo apt-get update
          sudo apt-get install libsystemd-dev libpcap-dev libcap-dev libpcap0.8-dev libnl-route-3-dev librdmacm-dev -y

      - name: Build
        run: |
          export $(cat .env | xargs)
          export IMAGE=fedora_nmap
          export CONTAINER_NAME=discovr_nmap
          export NMAP_WIN_ZIP=nmap-$NMAP_VERSION-win32.zip
          docker buildx build -f nmap.Dockerfile . --tag $IMAGE --build-arg FEDORA_PACKAGE
          docker create --name $CONTAINER_NAME $IMAGE
          docker wait $CONTAINER_NAME
          docker cp $CONTAINER_NAME:/usr/bin/nmap assets/nmap
          docker rm -v $CONTAINER_NAME
          wget https://nmap.org/dist/$NMAP_WIN_ZIP -O assets/$NMAP_WIN_ZIP

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release -f .github/goreleaser/goreleaser-x64.yaml --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}